[
    {
        "id": "58ebdf76.3afe2",
        "type": "tab",
        "label": "OADR Cmd",
        "disabled": false,
        "info": ""
    },
    {
        "id": "419cef7e.a4fa1",
        "type": "tab",
        "label": "OADR Logic",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9c6e28bf.8986f8",
        "type": "tab",
        "label": "BACnet",
        "disabled": false,
        "info": ""
    },
    {
        "id": "593c882.fb94178",
        "type": "tab",
        "label": "OADR Dash",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e86ea218.bf162",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "3738dfde.d87d3"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "fa45e29c.60c43",
        "type": "tls-config",
        "z": "",
        "name": "Oadr RSA Cert",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "TEST_RSA_VEN_18100344750_cert.pem",
        "keyname": "TEST_RSA_VEN_18100344750_privkey.pem",
        "caname": "TEST_OpenADR_RSA_RCA0002_Cert.pem",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "9fc0a954.b242d8",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "3303205f.8ad06",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "9fc0a954.b242d8",
        "order": 1,
        "disp": false,
        "width": "12"
    },
    {
        "id": "a4b810b.e996df",
        "type": "ui_group",
        "z": "",
        "name": "Group 2",
        "tab": "9fc0a954.b242d8",
        "order": 3,
        "disp": false,
        "width": "12"
    },
    {
        "id": "99e5857a.569228",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "378e6989.cb4646",
        "type": "ui_group",
        "z": "",
        "name": "Groupe 3",
        "tab": "9fc0a954.b242d8",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7dcf856e.ce461c",
        "type": "BACnet-Device",
        "z": "",
        "name": "Windows VM",
        "deviceAddress": "192.168.1.94"
    },
    {
        "id": "55de3f11.ac64",
        "type": "BACnet-Client",
        "z": "9c6e28bf.8986f8",
        "name": "Local BACnet",
        "adpuTimeout": "3000",
        "port": "47808",
        "interface": "192.168.10.241",
        "broadcastAddress": "255.255.255.0"
    },
    {
        "id": "a3584ce1.4d29",
        "type": "BACnet-Instance",
        "z": "",
        "name": "Room Simulator YABE",
        "instanceAddress": "3342490"
    },
    {
        "id": "45aaad62.c4de64",
        "type": "tls-config",
        "z": "",
        "name": "Custom RSA Cert",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "ven1.oadr.com.crt",
        "keyname": "ven1.oadr.com.key",
        "caname": "oadr.com.crt",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "26dd4900.c48d78",
        "type": "tls-config",
        "z": "",
        "name": "6C:46:BA:6E:D8:E1:0F:27:08:F3",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "test.crt",
        "keyname": "test.key",
        "caname": "ca.crt",
        "servername": "",
        "verifyservercert": true
    },
    {
        "id": "30bafd1d.cf93a2",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "Switch responseTypes",
        "property": "oadr.responseType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oadrCreatedPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrResponse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrDistributeEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrRegisterReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCreatedOpt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledOpt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCreateReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCancelReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrUpdateReport",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 480,
        "y": 520,
        "wires": [
            [
                "b04e8b26.f3f858"
            ],
            [],
            [],
            [
                "7937ff09.96024",
                "fe0cce1a.9ed38",
                "9761855e.0b4518"
            ],
            [
                "8d35cde8.4de3e"
            ],
            [],
            [],
            [
                "b3531ef9.0ebf9"
            ],
            [
                "21fc74b3.c51e3c"
            ],
            [
                "9a51defd.454a4",
                "2154f20f.076dce"
            ]
        ]
    },
    {
        "id": "7937ff09.96024",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "RegisterReport",
        "func": "let requestID = msg.payload.data.oadrRegisterReport.requestID;\n\nmsg = {};\n\nmsg.payload = {\n    requestType: 'RegisteredReport',\n    requestID\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 340,
        "wires": [
            [
                "3b84e432.2e4aac"
            ]
        ]
    },
    {
        "id": "add54be.d9466b8",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "Req or Rep",
        "property": "oadr.msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "request",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "6f3a0910.88fa48"
            ],
            [
                "30bafd1d.cf93a2"
            ]
        ]
    },
    {
        "id": "6f3a0910.88fa48",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "Switch requestTypes",
        "property": "oadr.requestType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oadrCreatedPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrResponse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrDistributeEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrRegisterReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrRequestReregistration",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 460,
        "y": 240,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [
                "40886f62.fb979"
            ]
        ]
    },
    {
        "id": "b758801d.108f7",
        "type": "link in",
        "z": "419cef7e.a4fa1",
        "name": "OADR",
        "links": [
            "34dd8f26.4d23a",
            "15ee4b63.2b6a45",
            "3b84e432.2e4aac",
            "b57a0bbf.53f628",
            "3cefb6c6.19ef4a",
            "bb5e4173.68035",
            "d2b8a49f.feff68",
            "8e37b06.226345",
            "f97c5f1c.9b5a6",
            "6ce4757c.0e674c",
            "d15586b7.129918",
            "27ef8b4a.7d3d14",
            "2e7191af.773eae",
            "7b6358db.0f4918",
            "3ba27321.9c732c",
            "ed4cbd14.59b6a"
        ],
        "x": 55,
        "y": 200,
        "wires": [
            [
                "93e0cdf9.f9b54"
            ]
        ]
    },
    {
        "id": "b04e8b26.f3f858",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "CreatedPartyRegistration",
        "func": "if (typeof msg.oadr.pollFreqSeconds === 'number'){\n    flow.set(\"DEMO_VEN_NODE:pollRate\", msg.oadr.pollFreqSeconds );\n}\n\nlet _ids = {\n    vtnID: msg.payload.data.oadrCreatedPartyRegistration.vtnID,\n    venID: msg.payload.data.oadrCreatedPartyRegistration.venID,\n    registrationID: msg.payload.data.oadrCreatedPartyRegistration.registrationID,\n}\n\nmsg.payload = _ids;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "7a246239.1d277c"
            ]
        ]
    },
    {
        "id": "d46a2590.066918",
        "type": "ui_text",
        "z": "593c882.fb94178",
        "group": "3303205f.8ad06",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "vtnID",
        "format": "{{msg.payload.vtnID}}",
        "layout": "col-center",
        "x": 235.625,
        "y": 99.37500762939453,
        "wires": []
    },
    {
        "id": "a9d926e3.aae728",
        "type": "ui_text",
        "z": "593c882.fb94178",
        "group": "3303205f.8ad06",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "venID",
        "label": "venID",
        "format": "{{msg.payload.venID}}",
        "layout": "col-center",
        "x": 231.25,
        "y": 146.25,
        "wires": []
    },
    {
        "id": "5e60a0c5.14a58",
        "type": "ui_text",
        "z": "593c882.fb94178",
        "group": "3303205f.8ad06",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "registrationID",
        "format": "{{msg.payload.registrationID}}",
        "layout": "col-center",
        "x": 247.49996948242188,
        "y": 191.25,
        "wires": []
    },
    {
        "id": "f80a2674.8bcda8",
        "type": "link in",
        "z": "593c882.fb94178",
        "name": "UI_IDS",
        "links": [
            "7a246239.1d277c",
            "f48a42e7.5efd4"
        ],
        "x": 71.875,
        "y": 130.18749237060547,
        "wires": [
            [
                "d46a2590.066918",
                "a9d926e3.aae728",
                "5e60a0c5.14a58"
            ]
        ]
    },
    {
        "id": "7a246239.1d277c",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "f80a2674.8bcda8"
        ],
        "x": 915,
        "y": 300,
        "wires": []
    },
    {
        "id": "8d35cde8.4de3e",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "CanceledPartyRegistration",
        "func": "flow.set(\"DEMO_VEN_NODE:pollRate\", 0 );\n\nlet _ids = {\n    vtnID: \"\",\n    venID: \"\",\n    registrationID: \"\"\n}\n\nmsg.payload = _ids;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 640,
        "wires": [
            [
                "f48a42e7.5efd4"
            ]
        ]
    },
    {
        "id": "3b84e432.2e4aac",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 1375,
        "y": 300,
        "wires": []
    },
    {
        "id": "cf2487b8.a9e758",
        "type": "link in",
        "z": "593c882.fb94178",
        "name": "UI_CREATE_REPORT",
        "links": [
            "f27c6d1b.65945",
            "6b4724c2.ce9d0c",
            "ea56206d.debae",
            "f2dfb197.a5999",
            "fad0fe8c.0d48e",
            "6ddd75b5.ae733c",
            "1ddb7a17.5ac886"
        ],
        "x": 135,
        "y": 480,
        "wires": [
            [
                "258511f6.a8e0ee"
            ]
        ]
    },
    {
        "id": "258511f6.a8e0ee",
        "type": "ui_template",
        "z": "593c882.fb94178",
        "group": "378e6989.cb4646",
        "name": "Requests",
        "order": 0,
        "width": "12",
        "height": "10",
        "format": "<!-- div ng-bind-html=\"msg.payload\"></div -->\n\n<div layout=\"row\" layout-align=\"start center\">\n  <span flex>ReportSpecifierId</span>\n  <span flex>RID</span>\n  <span flex>granularity</span>\n  <span flex>reportBackDuration</span>\n\n \n</div>\n<div  ng-repeat=\"Request in msg.payload.data.oadrCreateReport\">\n  <div layout=\"row\" layout-align=\"start center\" ng-repeat=\"r in Request\">\n\n  <span flex style=\"color: yellow\">{{r.reportSpecifier.reportSpecifierID}}</span>\n  <span flex style=\"color: yellow\">{{r.reportSpecifier.specifierPayload.rID}}</span>\n  <span flex style=\"color: gray\">{{r.reportSpecifier.granularity.duration}}</span>\n  <span flex style=\"color: gray\">{{r.reportSpecifier.reportBackDuration.duration}}</span>\n  </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 440,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b3531ef9.0ebf9",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Handle CreateReport",
        "func": "let data = msg.payload.data.oadrCreateReport;\n\nlet requests = flow.get(\"requests\");\nif(!requests) {\n    requests = {}\n}\n\nvar tmp = {}\nif (Array.isArray(data.oadrReportRequest)){\n    for(var i in data.oadrReportRequest){\n        var arr = tmp[data.oadrReportRequest[i].reportRequestID];\n        if(!arr){\n            arr = []\n        }\n        arr.push(data.oadrReportRequest[i])\n         tmp[data.oadrReportRequest[i].reportRequestID] = arr;\n        requests[data.oadrReportRequest[i].reportRequestID] = arr;\n    }\n  }else{\n    requests[data.oadrReportRequest.reportRequestID] = [data.oadrReportRequest];\n  }\n\n\nflow.set(\"requests\", requests)\n\nvar arr = [];\nfor(var key in requests){\n    arr.push(requests[key])\n}\n\nmsg.payload.data.oadrCreateReport = arr;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 740,
        "wires": [
            [
                "6b4724c2.ce9d0c",
                "9f4f7232.3cc99",
                "19f7ff03.9f2581"
            ]
        ]
    },
    {
        "id": "6b4724c2.ce9d0c",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "cf2487b8.a9e758"
        ],
        "x": 1555,
        "y": 560,
        "wires": []
    },
    {
        "id": "93e0cdf9.f9b54",
        "type": "VEN",
        "z": "419cef7e.a4fa1",
        "name": "AvobNodeRedOadrVEN",
        "url": "https://vtn.oadr.com:8181/testvtn",
        "tls": "26dd4900.c48d78",
        "profile": "2.0b",
        "pushport": "8083",
        "pushurl": "http://192.168.10.14",
        "venid": "6C:46:BA:6E:D8:E1:0F:27:08:F3",
        "pollrate": "5",
        "log": false,
        "pathlog": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "add54be.d9466b8"
            ]
        ]
    },
    {
        "id": "dfee7921.9d3c08",
        "type": "BACnet-Command",
        "z": "9c6e28bf.8986f8",
        "name": "Who is?",
        "commandType": "whoIsExplicit",
        "timeDuration": 0,
        "enableDisable": 0,
        "deviceState": 0,
        "isUtc": true,
        "lowLimit": "1",
        "highLimit": "254",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "e3c25faf.1e467",
        "type": "debug",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "996de73.c13ff18",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 60,
        "wires": [
            [
                "dfee7921.9d3c08"
            ]
        ]
    },
    {
        "id": "f8cac0a5.bef1b",
        "type": "BACnet-Read",
        "z": "9c6e28bf.8986f8",
        "name": "Multiple Read",
        "objectType": "0",
        "instance": "a3584ce1.4d29",
        "propertyId": "28",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "multipleRead": true,
        "x": 580,
        "y": 300,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "96723a95.5ed528",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 300,
        "wires": [
            [
                "f8cac0a5.bef1b"
            ]
        ]
    },
    {
        "id": "179c9af4.153b65",
        "type": "BACnet-Write",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "objectType": "1",
        "instance": "a3584ce1.4d29",
        "valueTag": "1",
        "valueValue": "",
        "propertyId": "28",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "multipleWrite": true,
        "x": 580,
        "y": 440,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "e15064bc.e22e38",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 440,
        "wires": [
            [
                "8b20457a.c078f8"
            ]
        ]
    },
    {
        "id": "54039c58.50cb24",
        "type": "BACnet-Command",
        "z": "9c6e28bf.8986f8",
        "name": "Time sync",
        "commandType": "timeSync",
        "timeDuration": 0,
        "enableDisable": 0,
        "deviceState": 0,
        "isUtc": false,
        "lowLimit": "1",
        "highLimit": "254",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "a776d152.dd93c",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "54039c58.50cb24"
            ]
        ]
    },
    {
        "id": "2b044be6.d57cf4",
        "type": "BACnet-Command",
        "z": "9c6e28bf.8986f8",
        "name": "Device warm start",
        "commandType": "reinitializeDevice",
        "timeDuration": 0,
        "enableDisable": 0,
        "deviceState": "1",
        "isUtc": true,
        "lowLimit": "1",
        "highLimit": "254",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "d45afee1.0d4bb",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 180,
        "wires": [
            [
                "2b044be6.d57cf4"
            ]
        ]
    },
    {
        "id": "643a0e5a.f5a8c",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 360,
        "wires": [
            [
                "666044a7.d1839c"
            ]
        ]
    },
    {
        "id": "680f0dd3.363ef4",
        "type": "BACnet-Write",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "objectType": "8",
        "instance": "a3584ce1.4d29",
        "valueTag": "1",
        "valueValue": "true",
        "propertyId": "28",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "multipleWrite": false,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "5e9a70b0.f6afc",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 500,
        "wires": [
            [
                "680f0dd3.363ef4"
            ]
        ]
    },
    {
        "id": "666044a7.d1839c",
        "type": "BACnet-Read",
        "z": "9c6e28bf.8986f8",
        "name": "Simple Read",
        "objectType": "8",
        "instance": "a3584ce1.4d29",
        "propertyId": "28",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "multipleRead": false,
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "ee9d39cc.2ad118",
        "type": "BACnet-Command",
        "z": "9c6e28bf.8986f8",
        "name": "DCC disable 10 sec.",
        "commandType": "deviceCommunicationControl",
        "timeDuration": "10",
        "enableDisable": "1",
        "deviceState": "255",
        "isUtc": true,
        "lowLimit": "1",
        "highLimit": "254",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "e3c25faf.1e467"
            ]
        ]
    },
    {
        "id": "beab3b84.573d38",
        "type": "inject",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 240,
        "wires": [
            [
                "ee9d39cc.2ad118"
            ]
        ]
    },
    {
        "id": "8b20457a.c078f8",
        "type": "function",
        "z": "9c6e28bf.8986f8",
        "name": "bacnet write msg",
        "func": "msg.payload = {\n    // deviceIPAddress: '127.0.0.1'\n    values: [\n        {\n            // objectId: {type: 8, instance: 44301}, \n            values: [\n                {property: {id: 28, index: 12}, value: [{type: 1, value: true}], priority: 8}\n            ]\n        }\n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "179c9af4.153b65"
            ]
        ]
    },
    {
        "id": "f2830188.642af",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload.data",
        "x": 890,
        "y": 400,
        "wires": []
    },
    {
        "id": "1a6ab8d4.ad2437",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "x",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1110,
        "y": 120,
        "wires": []
    },
    {
        "id": "b5ceb2df.7e105",
        "type": "switch",
        "z": "e86ea218.bf162",
        "name": "Switch responseTypes",
        "property": "oadr.responseType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oadrCreatedPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrResponse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrDistributeEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrRegisterReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCreatedOpt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledOpt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCreateReport",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "f2830188.642af",
                "ff002010.890d6"
            ],
            [
                "f2830188.642af"
            ],
            [
                "f2830188.642af",
                "417838d0.2a0848",
                "de5adbb1.30e238"
            ],
            [
                "f2830188.642af",
                "1a42b8e0.9ecce7"
            ],
            [
                "f2830188.642af",
                "a0a4deb0.fc478"
            ],
            [],
            [],
            [
                "9b5bffac.dc145"
            ]
        ]
    },
    {
        "id": "417838d0.2a0848",
        "type": "function",
        "z": "e86ea218.bf162",
        "name": "Handle DistributeEvents",
        "func": "let data = msg.payload.data.oadrDistributeEvent;\n\nlet respMsg = {};\nrespMsg.payload = {};\nrespMsg.payload.requestID = data.requestID;\n//respMsg.payload.venID = '48ac6ed956e1f1f4fdbe';\n\nif(data.responseRequired === 'never'){\n    // don't repsone to broadcast messages\n    return;\n}\n\nrespMsg.payload.requestType = \"CreatedEvent\";\n\nlet eventArray = [];\n\nif(data.oadrEvent){\n    //console.log(data.oadrEvent.length);\n    if (data.oadrEvent.eiEvent){\n        xyz(data.oadrEvent);\n    }\n    else{\n        data.oadrEvent.forEach( event => {\n            xyz(event);\n        });\n    }\n    \n    if(eventArray.length > 0){\n        respMsg.payload.eventResponses = eventArray;\n    }\n    \n}\n\nfunction xyz(event){\n    // Don't respond if not requested\n    if (event.oadrResponseRequired === 'never'){\n        return;\n    }\n    \n    let optType;\n    \n    let ed = event.eiEvent.eventDescriptor;\n    \n    switch(ed.eventStatus.toLowerCase()){\n        case('completed'):\n        case('canceled'):\n            optType = 'optOut';\n            break;\n        default: \n            optType = 'optIn';\n            break;\n    }\n    \n    if(optType === 'optIn'){\n        switch(ed.eiMarketContext.marketContext.toLowerCase()){\n            case('demand_response'):\n            case('http://marketcontext1'):\n                break;\n            default:\n                optType = 'optOut';\n                break;\n        }\n    }\n    \n    optType = (ed.eventStatus.toLowerCase() === 'completed' )? 'optOut' : 'optIn';\n    \n    \n    let createdEvent = {\n    responseCode: 200,\n    responseDescription: 'OK',\n    //requestID: '11111111',\n    qualifiedEventID : {\n        eventID: ed.eventID,\n        modificationNumber: ed.modificationNumber\n    },\n    optType: optType\n    };\n    \n    // console.log(createdEvent);\n    eventArray.push(createdEvent);\n//        respMsg.payload.eventResponses.push(createdEvent);\n\n}\n\nreturn respMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 180,
        "wires": [
            [
                "1a6ab8d4.ad2437",
                "2d104612.f5d72a"
            ]
        ]
    },
    {
        "id": "1a42b8e0.9ecce7",
        "type": "function",
        "z": "e86ea218.bf162",
        "name": "RegisterReport",
        "func": "let requestID = msg.payload.data.oadrRegisterReport.requestID;\n\nmsg = {};\n\nmsg.payload = {\n    requestType: 'RegisteredReport',\n    requestID\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 877.7500610351562,
        "y": 285.45001220703125,
        "wires": [
            [
                "eb82622c.1ea65",
                "2d104612.f5d72a"
            ]
        ]
    },
    {
        "id": "eb82622c.1ea65",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "regreport",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1062.25,
        "y": 294.800048828125,
        "wires": []
    },
    {
        "id": "61402569.99740c",
        "type": "switch",
        "z": "e86ea218.bf162",
        "name": "Req or Rep",
        "property": "oadr.msgType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "request",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 323.4999694824219,
        "y": 300.1999816894531,
        "wires": [
            [
                "ca3298d6.1019e8"
            ],
            [
                "b5ceb2df.7e105"
            ]
        ]
    },
    {
        "id": "ca3298d6.1019e8",
        "type": "switch",
        "z": "e86ea218.bf162",
        "name": "Switch requestTypes",
        "property": "oadr.requestType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "oadrCreatedPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrResponse",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrDistributeEvent",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrRegisterReport",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "oadrCanceledPartyRegistration",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Poll",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 560,
        "y": 160,
        "wires": [
            [],
            [],
            [
                "417838d0.2a0848",
                "de5adbb1.30e238",
                "955bfead.9f0be",
                "1a6ab8d4.ad2437"
            ],
            [
                "1a42b8e0.9ecce7",
                "99978869.b9fb08"
            ],
            [],
            []
        ]
    },
    {
        "id": "99978869.b9fb08",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 910.0000610351562,
        "y": 228.7999267578125,
        "wires": []
    },
    {
        "id": "ff002010.890d6",
        "type": "function",
        "z": "e86ea218.bf162",
        "name": "",
        "func": "if (typeof msg.oadr.pollFreqSeconds === 'number'){\n    flow.set(\"DEMO_VEN_NODE:pollRate\", msg.oadr.pollFreqSeconds );\n}\n\nlet _ids = {\n    vtnID: msg.payload.data.oadrCreatedPartyRegistration.vtnID,\n    venID: msg.payload.data.oadrCreatedPartyRegistration.venID,\n    registrationID: msg.payload.data.oadrCreatedPartyRegistration.registrationID,\n}\n\nmsg.payload = _ids;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 861.875,
        "y": 349.3124694824219,
        "wires": [
            [
                "fcd50f5b.9ab44",
                "aadbef25.f66d2"
            ]
        ]
    },
    {
        "id": "fcd50f5b.9ab44",
        "type": "link out",
        "z": "e86ea218.bf162",
        "name": "",
        "links": [],
        "x": 1106.625,
        "y": 419.875,
        "wires": []
    },
    {
        "id": "a0a4deb0.fc478",
        "type": "function",
        "z": "e86ea218.bf162",
        "name": "",
        "func": "flow.set(\"DEMO_VEN_NODE:pollRate\", 0 );\n\nlet _ids = {\n    vtnID: \"\",\n    venID: \"\",\n    registrationID: \"\"\n}\n\nmsg.payload = _ids;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 823.5,
        "y": 510.2499694824219,
        "wires": [
            [
                "fcd50f5b.9ab44",
                "9e73d9f0.ad4e88"
            ]
        ]
    },
    {
        "id": "9e73d9f0.ad4e88",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1044.875,
        "y": 508.125,
        "wires": []
    },
    {
        "id": "aadbef25.f66d2",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1046.8748779296875,
        "y": 342.875,
        "wires": []
    },
    {
        "id": "de5adbb1.30e238",
        "type": "link out",
        "z": "e86ea218.bf162",
        "name": "",
        "links": [],
        "x": 800.375,
        "y": 459.6250305175781,
        "wires": []
    },
    {
        "id": "2d104612.f5d72a",
        "type": "link out",
        "z": "e86ea218.bf162",
        "name": "",
        "links": [
            "4c4768fd.ce2e48"
        ],
        "x": 1095,
        "y": 240,
        "wires": []
    },
    {
        "id": "955bfead.9f0be",
        "type": "debug",
        "z": "e86ea218.bf162",
        "name": "Req Dist Event",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 888.125,
        "y": 119.1249942779541,
        "wires": []
    },
    {
        "id": "9b5bffac.dc145",
        "type": "function",
        "z": "e86ea218.bf162",
        "name": "Handle CreateReports",
        "func": "let data = msg.payload.data.oadrCreateReport;\n\nlet requestArray = [];\n\nif(data.oadrReportRequest){\n   requestArray.push(data.oadrReportRequest)\n\n}\nmsg.payload.data.oadrCreateReport = requestArray;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 560,
        "wires": [
            [
                "c220627b.af78d"
            ]
        ]
    },
    {
        "id": "c220627b.af78d",
        "type": "link out",
        "z": "e86ea218.bf162",
        "name": "",
        "links": [],
        "x": 995,
        "y": 560,
        "wires": []
    },
    {
        "id": "3738dfde.d87d3",
        "type": "VEN",
        "z": "e86ea218.bf162",
        "name": "mouaiccool",
        "url": "https://192.168.10.42:8181/testvtn",
        "tls": "fa45e29c.60c43",
        "profile": "2.0b",
        "pushport": "8082",
        "pushurl": "",
        "venid": "5B:9B:BF:21:33:A0:DF:6B:21:81",
        "pollrate": "5",
        "log": false,
        "pathlog": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "61402569.99740c"
            ]
        ]
    },
    {
        "id": "4c4768fd.ce2e48",
        "type": "link in",
        "z": "e86ea218.bf162",
        "name": "OADR",
        "links": [
            "2d104612.f5d72a"
        ],
        "x": 95,
        "y": 340,
        "wires": [
            [
                "3738dfde.d87d3"
            ]
        ]
    },
    {
        "id": "d2b8a49f.feff68",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 1195,
        "y": 780,
        "wires": []
    },
    {
        "id": "af56ed8b.6cd5c",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Handle RequestReregistration",
        "func": "let req = msg.payload;\nmsg.payload = {};\nmsg.payload.requestType = \"QueryRegistration\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 780,
        "wires": [
            [
                "d2b8a49f.feff68"
            ]
        ]
    },
    {
        "id": "21fc74b3.c51e3c",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Handle CancelReport",
        "func": "\nvar requests = flow.get(\"requests\");\nif(!requests) {\n    requests = {}\n}\n\nnode.log(requests)\ndelete requests[msg.payload.data.oadrCancelReport.reportRequestID]\n\nflow.set(\"requests\", requests)\nvar arr = [];\nfor(var key in requests){\n    arr.push(requests[key])\n}\n\nreturn {\n    payload: {\n        data: {\n            oadrCreateReport: arr\n        }\n    }\n};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 820,
        "wires": [
            [
                "ea56206d.debae"
            ]
        ]
    },
    {
        "id": "ea56206d.debae",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "cf2487b8.a9e758"
        ],
        "x": 1135,
        "y": 820,
        "wires": []
    },
    {
        "id": "9f4f7232.3cc99",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Has HANDLER_CMD",
        "func": "var data = msg.payload.data.oadrCreateReport;\nvar cmd = [];\nfor(var i in data){\n    createReport = data[i];\n    for(var j in createReport){\n        if(createReport[j].reportSpecifier.reportSpecifierID == \"HANDLER_CMD\"){\n            cmd.push(createReport[j].reportSpecifier.specifierPayload.rID)\n        }\n    }\n}\n\nif(cmd.length > 0) {\n    return {\n        payload: cmd\n    };\n}\nreturn {};\n ",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 740,
        "wires": [
            [
                "8117a9f4.dbc368"
            ]
        ]
    },
    {
        "id": "8117a9f4.dbc368",
        "type": "split",
        "z": "419cef7e.a4fa1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1590,
        "y": 740,
        "wires": [
            [
                "77fa611f.4cbab"
            ]
        ]
    },
    {
        "id": "77fa611f.4cbab",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SCAN",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1710,
        "y": 740,
        "wires": [
            [
                "6c4c6ead.c5bcf"
            ]
        ]
    },
    {
        "id": "6c4c6ead.c5bcf",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Scan BACNET",
        "func": "return {\n    payload: {\n        deviceIPAddress: \"192.168.10.241\"\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "x": 1860,
        "y": 740,
        "wires": [
            [
                "b9c9b7fd.7968a8"
            ]
        ]
    },
    {
        "id": "1a95ef6c.4fae51",
        "type": "BACnet-Command",
        "z": "9c6e28bf.8986f8",
        "name": "Who is?",
        "commandType": "whoIsExplicit",
        "timeDuration": 0,
        "enableDisable": 0,
        "deviceState": 0,
        "isUtc": true,
        "lowLimit": "1",
        "highLimit": "254",
        "device": "7dcf856e.ce461c",
        "server": "55de3f11.ac64",
        "x": 1280,
        "y": 80,
        "wires": [
            [
                "209a91fd.8361fe",
                "2f975701.86e878"
            ]
        ]
    },
    {
        "id": "b9c9b7fd.7968a8",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "d337ae75.cef19"
        ],
        "x": 1975,
        "y": 740,
        "wires": []
    },
    {
        "id": "d337ae75.cef19",
        "type": "link in",
        "z": "9c6e28bf.8986f8",
        "name": "BACNET",
        "links": [
            "b9c9b7fd.7968a8",
            "4dfe45c7.deb87c"
        ],
        "x": 1175,
        "y": 80,
        "wires": [
            [
                "1a95ef6c.4fae51"
            ]
        ]
    },
    {
        "id": "d3f91c99.35bb3",
        "type": "link in",
        "z": "419cef7e.a4fa1",
        "name": "SCAN",
        "links": [
            "391fc510.34272a"
        ],
        "x": 115,
        "y": 980,
        "wires": [
            [
                "77a419a6.f57108"
            ]
        ]
    },
    {
        "id": "77a419a6.f57108",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "BACNET SCAN TO REGISTER",
        "func": "var reports = flow.get(\"reports\");\nif( !reports[\"BACNET\"] && Array.isArray(msg.payload) && Array.isArray(msg.devices) && msg.devices.length > 0 ){\n    msg.payload = {}\n\n    var dt = new Date().toISOString();\n    \n    \n    \n    var desc = [];\n    \n    \n    for(var i in msg.devices) {\n        var device = msg.devices[i];\n        desc.push({\n            \"ei:rID\": device.address + \"-\" + device.deviceId,\n            \"ei:reportType\": \"reading\",\n            \"ei:readingType\": \"x-notApplicable\",\n            \"oadrSamplingRate\": {\n                oadrMinPeriod: 'PT1M',\n                oadrMaxPeriod: 'PT1M',\n                oadrOnChange:  'false'\n            }\n        })\n    }\n    \n    var report = {\n       \"ei:reportRequestID\": 0,\n       \"ei:reportSpecifierID\": \"BACNET\",\n       \"ei:reportName\": \"METADATA_TELEMETRY_USAGE\",\n       \"ei:createdDateTime\": dt,\n       oadrReportDescription: desc\n    }\n    \n    reports[\"BACNET\"] = report;\n    \n    flow.set(\"reports\", reports);\n    \n    var arr = [];\n    for(var key in reports) {\n        arr.push(reports[key]);\n    }\n    \n    msg.payload = {\n        requestType: 'RegisterReport',\n        oadrReport: arr\n    }\n    \n    return msg;\n}\nreturn {};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 345,
        "y": 980,
        "wires": [
            [
                "754935b.6aed9cc"
            ]
        ]
    },
    {
        "id": "391fc510.34272a",
        "type": "link out",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "links": [
            "d3f91c99.35bb3"
        ],
        "x": 1575,
        "y": 60,
        "wires": []
    },
    {
        "id": "6ce4757c.0e674c",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 655,
        "y": 980,
        "wires": []
    },
    {
        "id": "754935b.6aed9cc",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 545,
        "y": 980,
        "wires": [
            [
                "6ce4757c.0e674c"
            ]
        ]
    },
    {
        "id": "209a91fd.8361fe",
        "type": "switch",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 80,
        "wires": [
            [
                "391fc510.34272a"
            ]
        ]
    },
    {
        "id": "65c2dcde.d6a164",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "QueryRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "x": 270,
        "y": 480,
        "wires": [
            [
                "e9fe15f8.32a628"
            ]
        ]
    },
    {
        "id": "ef20e515.81eed8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Register w/ Pull",
        "topic": "",
        "payload": "CreatePartyRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "e87a60a0.de832"
            ]
        ]
    },
    {
        "id": "47134f7e.5d2bc",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "CancelPartyRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 290,
        "y": 420,
        "wires": [
            [
                "e9fe15f8.32a628",
                "abc6c328.34ee4"
            ]
        ]
    },
    {
        "id": "d84dfb0d.937258",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "CreateParty Push",
        "func": "msg = {};\nmsg.payload = {};\n\nmsg.payload = { \n    requestType: \"CreatePartyRegistration\",\n    oadrHttpPullModel: false,\n    oadrTransportAddress: 'http://192.168.1.14:8083',\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 180,
        "wires": [
            [
                "d15586b7.129918"
            ]
        ]
    },
    {
        "id": "b03ed63b.c25f08",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Register w/ Push",
        "topic": "",
        "payload": "CreatePartyRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "d84dfb0d.937258"
            ]
        ]
    },
    {
        "id": "e87a60a0.de832",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "CreateParty Pull",
        "func": "msg = {};\nmsg.payload = {};\n\nmsg.payload = { \n    requestType: \"CreatePartyRegistration\",\n    oadrHttpPullModel: true,\n    //oadrTransportAddress: 'http://localhost:8843'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 120,
        "wires": [
            [
                "d15586b7.129918"
            ]
        ]
    },
    {
        "id": "d15586b7.129918",
        "type": "link out",
        "z": "58ebdf76.3afe2",
        "name": "",
        "links": [
            "b758801d.108f7"
        ],
        "x": 775,
        "y": 120,
        "wires": []
    },
    {
        "id": "e9fe15f8.32a628",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "convert simple payload string to requestType",
        "func": "let req = msg.payload;\nmsg.payload = {};\nmsg.payload.requestType = req;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 420,
        "wires": [
            [
                "d15586b7.129918"
            ]
        ]
    },
    {
        "id": "3b73ef67.5dae6",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Clear Requests Flow State",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 540,
        "wires": [
            [
                "abc6c328.34ee4"
            ]
        ]
    },
    {
        "id": "eab7f440.fddea8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "RequestEvent",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "8a039117.55daa"
            ]
        ]
    },
    {
        "id": "e6c69c9b.ae672",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Single Poll",
        "topic": "",
        "payload": "Poll",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1027.5001525878906,
        "y": 247.24993896484375,
        "wires": [
            [
                "8a039117.55daa"
            ]
        ]
    },
    {
        "id": "8a039117.55daa",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "convert simple payload string to requestType",
        "func": "let req = msg.payload;\nmsg.payload = {};\nmsg.payload.requestType = req;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 220,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "e4866102.b0faf",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "OptIn Multiple",
        "func": "msg = {};\nmsg.payload = {};\n\nlet d1 = new Date();\nlet d2 = new Date();\nlet d3 = new Date();\nd2.setDate(d1.getDate() + 1);\nd3.setDate(d2.getDate() + 1);\n\nlet components = [];\n\nlet available = {\n        properties: {\n            dtstart: {\n                'date-time': d1.toISOString()\n            },\n            duration: {\n                duration: 'PT5M'\n            }\n        }\n            \n    };\n\navailable.properties.dtstart['date-time'] = d1.toISOString();\navailable.properties.duration.duration = 'PT5M';\navailable.properties['ei:x-eiRampUp'] = {\n    duration: 'PT2M'\n};\ncomponents.push(JSON.parse(JSON.stringify(available)));\n\navailable.properties.dtstart['date-time'] = d2.toISOString();\navailable.properties.duration.duration = 'PT10M';\navailable.properties['ei:x-eiRampUp'] = {\n    duration: 'PT12M'\n};\ncomponents.push(JSON.parse(JSON.stringify(available)));\n\navailable.properties.dtstart['date-time'] = d3.toISOString();\navailable.properties.duration.duration = 'PT15M';\navailable.properties['ei:x-eiRampUp'] = {\n    duration: 'PT22M'\n};\ncomponents.push(JSON.parse(JSON.stringify(available)));\n\n\nmsg.payload = { \n    requestType: \"CreateOpt\",\n    optType: 'optIn',\n    optReason: 'economic',\n    marketContext: 'http://MarketContext1',\n    components: components\n};\n\n\n//    dtstart: d1,\n//    duration: 'PT1H30M'\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1251.2222290039062,
        "y": 349.72222900390625,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "c78ed89e.84dca8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "OptIn",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1006.1111145019531,
        "y": 348.49993896484375,
        "wires": [
            [
                "e4866102.b0faf"
            ]
        ]
    },
    {
        "id": "ccad6260.56ec4",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "OptOut 1H15M",
        "func": "msg = {};\nmsg.payload = {};\n\nlet d1 = new Date();\nd1.setDate(15);\n\nmsg.payload = { \n    requestType: \"CreateOpt\",\n    optType: 'optOut',\n    optID: '111111111-OUT',\n    optReason: 'economic',\n    marketContext: 'http://MarketContext1',\n    resourceID: 'XYZ',\n    dtstart: d1.toISOString(),\n    duration: 'PT1H15M'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250.5556030273438,
        "y": 404.2222900390625,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "182d3e23.7769e2",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "Cancel OptOut 1H15M",
        "func": "msg = {};\nmsg.payload = {};\n\nlet d1 = new Date();\n\nmsg.payload = { \n    requestType: \"CancelOpt\",\n    optID: '111111111-OUT'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1265.1111450195312,
        "y": 443.4443359375,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "6e74ebc1.a8a364",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "OptOut",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1004.3333129882812,
        "y": 401.833251953125,
        "wires": [
            [
                "ccad6260.56ec4"
            ]
        ]
    },
    {
        "id": "c74698a1.075bc8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "Cancel Opt",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1012.7777709960938,
        "y": 442.833251953125,
        "wires": [
            [
                "182d3e23.7769e2"
            ]
        ]
    },
    {
        "id": "e31528e7.635398",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "2.0a requestEvent",
        "func": "// let venID = '48ac6ed956e1f1f4fdbe';\nmsg = {};\nmsg.payload = {};\n\nmsg.payload = { \n    requestType: \"RequestEvent\",\n//    venID\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 140,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "5b06caa.88d0c34",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "RequestEvent 2.0a",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "e31528e7.635398"
            ]
        ]
    },
    {
        "id": "e3214084.bb9ab",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "RegisterReport",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1029,
        "y": 500,
        "wires": [
            [
                "e74d2a13.c4f788"
            ]
        ]
    },
    {
        "id": "e74d2a13.c4f788",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "Single RegisterReport",
        "func": "msg.payload = {}\n\nvar dt = new Date().toISOString();\n\nmsg.payload.requestType = 'RegisterReport';\nmsg.payload.duration = 'PT2H';\nmsg.payload.marketContext = 'http://MarketContext1';\nmsg.payload.createdDateTime = dt;\n\nmsg.payload = {\n    requestType: 'RegisterReport',\n    duration: 'PT2H',\n    marketContext: 'http://MarketContext1',\n    createdDateTime: dt,\n    rID: 'resource1_status',\n    resourceID: 'resource1',\n    reportType: 'x-resourceStatus',\n    readingType: 'x-notApplicable',\n    oadrMinPeriod: 'PT1M',\n    oadrMaxPeriod: 'PT1M',\n    oadrOnChange: false,\n    reportRequestID: 0,\n    // reportSecifierID: uid,\n    reportName: 'METADATA_TELEMETRY_STATUS',\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1261.5,
        "y": 501.8599853515625,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "ffc6f7f4.cfeea8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "UpdateReport",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1010,
        "y": 680,
        "wires": [
            [
                "f20d4231.b581a"
            ]
        ]
    },
    {
        "id": "f20d4231.b581a",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "Single UpdateReport",
        "func": "msg.payload = {}\n\nvar dt = new Date().toISOString();\n\nmsg.payload.requestType = 'RegisterReport';\nmsg.payload.duration = 'PT2H';\nmsg.payload.marketContext = 'http://MarketContext1';\nmsg.payload.createdDateTime = dt;\n\nmsg.payload = {\n    requestType: 'UpdateReport',\n    duration: 'PT2H',\n    marketContext: 'http://MarketContext1',\n    createdDateTime: dt,\n    rID: 'resource1_status',\n    resourceID: 'resource1',\n    reportType: 'x-resourceStatus',\n    readingType: 'x-notApplicable',\n    oadrMinPeriod: 'PT1M',\n    oadrMaxPeriod: 'PT1M',\n    oadrOnChange: false,\n    reportRequestID: 0,\n    // reportSecifierID: uid,\n    reportName: 'METADATA_TELEMETRY_STATUS',\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 680,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "2e7191af.773eae",
        "type": "link out",
        "z": "58ebdf76.3afe2",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 1535,
        "y": 340,
        "wires": []
    },
    {
        "id": "edc63d4.90d35c",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Toggle Polling",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 230,
        "y": 720,
        "wires": [
            [
                "f0cf40fc.7f858"
            ]
        ]
    },
    {
        "id": "e26e6c28.27efb",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "",
        "topic": "",
        "payload": "RegisterReport",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "1736477b.0d8cc9"
            ]
        ]
    },
    {
        "id": "1736477b.0d8cc9",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "Multiple RegisterReport",
        "func": "msg.payload = {}\n\nvar dt = new Date().toISOString();\n\nmsg.payload = {\n    requestType: 'RegisterReport',\n    oadrReport: [\n        {\n            duration: {\n              _attr: { xmlns: 'urn:ietf:params:xml:ns:icalendar-2.0' },\n              duration: \"PT2H\",\n            },\n           \"ei:reportRequestID\": 0,\n           \"ei:reportSpecifierID\": \"reportSpecifierId\",\n           \"ei:reportName\": \"METADATA_TELEMETRY_STATUS\",\n           \"ei:createdDateTime\": dt,\n           oadrReportDescription: [\n                {\n                    \"ei:rID\": \"resource_status\",\n                    \"ei:reportType\": \"x-resourceStatus\",\n                    \"ei:readingType\": \"x-notApplicable\",\n                    \"ei:reportDataSource\": {\n                        \"ei:resourceID\": \"resource\"\n                    },\n                    \"marketContext\": {\n                        _attr: { xmlns: 'http://docs.oasis-open.org/ns/emix/2011/06' },\n                        _value: \"http://marketcontext\"\n                    },\n                    \"oadrSamplingRate\": {\n                        oadrMinPeriod: 'PT1M',\n                        oadrMaxPeriod: 'PT1M',\n                        oadrOnChange:  'false'\n                    }\n                } ,\n                {\n                    \"ei:rID\": \"resource_status_2\",\n                    \"ei:reportType\": \"x-resourceStatus\",\n                    \"ei:readingType\": \"x-notApplicable\",\n                    \"ei:reportDataSource\": {\n                        \"ei:resourceID\": \"resource\"\n                    },\n                    \"marketContext\": {\n                        _attr: { xmlns: 'http://docs.oasis-open.org/ns/emix/2011/06' },\n                        _value: \"http://marketcontext\"\n                    },\n                    \"oadrSamplingRate\": {\n                        oadrMinPeriod: 'PT1M',\n                        oadrMaxPeriod: 'PT1M',\n                        oadrOnChange:  'false'\n                    }\n                } \n            ]\n        },\n        {\n           \"ei:reportRequestID\": 1,\n           \"ei:reportSpecifierID\": \"reportSpecifierId1\",\n           \"ei:reportName\": \"METADATA_TELEMETRY_STATUS\",\n           \"ei:createdDateTime\": dt,\n           oadrReportDescription: [\n                {\n                    \"ei:rID\": \"resource_status\",\n                    \"ei:reportType\": \"x-resourceStatus\",\n                    \"ei:readingType\": \"x-notApplicable\",\n                    \"ei:reportDataSource\": {\n                        \"ei:resourceID\": \"resource\"\n                    },\n                    \"marketContext\": {\n                        _attr: { xmlns: 'http://docs.oasis-open.org/ns/emix/2011/06' },\n                        _value: \"http://marketcontext\"\n                    },\n                    \"oadrSamplingRate\": {\n                        oadrMinPeriod: 'PT1M',\n                        oadrMaxPeriod: 'PT1M',\n                        oadrOnChange:  'false'\n                    }\n                } ,\n                {\n                    \"ei:rID\": \"resource_status_2\",\n                    \"ei:reportType\": \"x-resourceStatus\",\n                    \"ei:readingType\": \"x-notApplicable\",\n                    \"ei:reportDataSource\": {\n                        \"ei:resourceID\": \"resource\"\n                    },\n                    \"marketContext\": {\n                        _attr: { xmlns: 'http://docs.oasis-open.org/ns/emix/2011/06' },\n                        _value: \"http://marketcontext\"\n                    },\n                    \"oadrSamplingRate\": {\n                        oadrMinPeriod: 'PT1M',\n                        oadrMaxPeriod: 'PT1M',\n                        oadrOnChange:  'false'\n                    }\n                } \n            ]\n        }\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 560,
        "wires": [
            [
                "2e7191af.773eae"
            ]
        ]
    },
    {
        "id": "33cf0297.782d4e",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "METADATA + HANDLER_CMD + AvobExtService",
        "func": "let venID = global.get(\"AvobNodeRedOadrVEN:IDs\").venID;\n\nmsg.payload = {}\n\nvar dt = new Date().toISOString();\nvar reports = flow.get(\"reports\");\nif(!reports) {\n    reports = {}\n}\n\nvar reportMetadata = {\n    \n   \"reportRequestID\": \"0\",\n   \"reportSpecifierID\": \"METADATA\",\n   \"reportName\": \"METADATA_HISTORY_USAGE\",\n   \"createdDateTime\": dt,\n   oadrReportDescription: [\n        {\n            \"rid\": \"METADATA\",\n            \"reportType\": \"reading\",\n            \"readingType\": \"x-notApplicable\",\n            \"oadrSamplingRate\": {\n                oadrMinPeriod: 'P0D',\n                oadrMaxPeriod: 'P0D',\n                oadrOnChange:  'false'\n            }\n        } \n    ]\n}\n\nvar reportHandlerCmd = {\n   \"reportRequestID\": \"0\",\n   \"reportSpecifierID\": \"HANDLER_CMD\",\n   \"reportName\": \"METADATA_HISTORY_USAGE\",\n   \"createdDateTime\": dt,\n   oadrReportDescription: [\n        {\n            \"rid\": \"SCAN\",\n            \"reportType\": \"reading\",\n            \"readingType\": \"x-notApplicable\",\n            \"oadrSamplingRate\": {\n                oadrMinPeriod: 'P0D',\n                oadrMaxPeriod: 'P0D',\n                oadrOnChange:  'false'\n            }\n        } \n    ]\n}\n\nvar reportAvobVenService = {\n   \"reportRequestID\": \"0\",\n   \"reportSpecifierID\": \"AvobExtService\",\n   \"reportName\": \"METADATA_HISTORY_USAGE\",\n   \"createdDateTime\": dt,\n   oadrReportDescription: [\n        {\n            \"rid\": \"AvobExtService_MetaData_ServiceDeclaration\",\n            \"reportType\": \"operatingState\",\n            \"readingType\": \"Direct Read\",\n            \"oadrSamplingRate\": {\n                oadrMinPeriod: 'P0D',\n                oadrMaxPeriod: 'P0D',\n                oadrOnChange:  'false'\n            }\n        } \n    ]\n}\n\nreports[\"METADATA\"] = reportMetadata;\nreports[\"HANDLER_CMD\"] = reportHandlerCmd;\nreports[\"AvobExtService\"] = reportAvobVenService;\n\nflow.set(\"reports\", reports);\nvar payload = {\n    requestID:\"0\",\n    venID:venID,\n    oadrReport: [\n       reportMetadata,\n       reportHandlerCmd,\n       reportAvobVenService\n    ]\n}\n\nnode.log(payload)\n\nmsg.payload = {\n    requestType: 'RegisterReport',\n    oadrRegisterReport: payload\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 900,
        "wires": [
            [
                "7b6358db.0f4918"
            ]
        ]
    },
    {
        "id": "7b6358db.0f4918",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 655,
        "y": 900,
        "wires": []
    },
    {
        "id": "e1103aa0.7cceb8",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Setup RegisterReport",
        "topic": "",
        "payload": "Setup RegisterReport",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "x": 260,
        "y": 640,
        "wires": [
            [
                "ce33ec29.43498"
            ]
        ]
    },
    {
        "id": "ce33ec29.43498",
        "type": "link out",
        "z": "58ebdf76.3afe2",
        "name": "",
        "links": [
            "9fe933a.83861d"
        ],
        "x": 455,
        "y": 640,
        "wires": []
    },
    {
        "id": "9fe933a.83861d",
        "type": "link in",
        "z": "419cef7e.a4fa1",
        "name": "Setup Report",
        "links": [
            "ce33ec29.43498"
        ],
        "x": 120,
        "y": 900,
        "wires": [
            [
                "33cf0297.782d4e"
            ]
        ]
    },
    {
        "id": "d91611e8.261ad",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Auto Poll",
        "func": "var pollMsg = {\n    payload: {\n        requestType : \"Poll\"\n    }\n};\n\nvar enablevar = \"DEMO_VEN_NODE:pollEnable\"\nvar flowvar = \"DEMO_VEN_NODE:pollRate\";\nvar pollInt = flow.get(flowvar);\nvar enable = flow.get(enablevar);\nif(enable === null || !enable){\n    flow.set(enablevar, true)\n    if (pollInt === 0) return;\n\n    var it = setInterval(doPolling, pollInt * 1000);\n    node.status( { fill: \"green\", shape: \"dot\", text: \"Polling sec: \" + pollInt});\n    function doPolling(){\n        var newPollingInt = flow.get(flowvar);\n        var newEnable = flow.get(enablevar);\n        if (newPollingInt === 0 || !newEnable){\n            clearInterval(it);\n            node.status( { fill: \"red\", shape: \"dot\", text: \"Polling: stopped\"});\n            flow.set(enablevar, false)\n            return;\n        }\n        if (newPollingInt != pollInt){\n            clearInterval(it);\n            pollInt = newPollingInt;\n            it = setInterval(doPolling, pollInt * 1000);\n            node.status( { fill: \"green\", shape: \"dot\", text: \"Polling sec: \" + pollInt});\n        }\n        node.send(pollMsg);\n    }\n}\nelse {\n    flow.set(enablevar, false)\n}\n\n\nnode.on('close', function(){\n    clearInterval(it);\n    node.status( { fill: \"red\", shape: \"dot\", text: \"Polling: stopped\"});\n})\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1060,
        "wires": [
            [
                "6ce4757c.0e674c"
            ]
        ]
    },
    {
        "id": "9887e009.c1c69",
        "type": "link in",
        "z": "419cef7e.a4fa1",
        "name": "Toggle Polling",
        "links": [
            "f0cf40fc.7f858"
        ],
        "x": 115,
        "y": 1060,
        "wires": [
            [
                "d91611e8.261ad"
            ]
        ]
    },
    {
        "id": "f0cf40fc.7f858",
        "type": "link out",
        "z": "58ebdf76.3afe2",
        "name": "",
        "links": [
            "9887e009.c1c69"
        ],
        "x": 455,
        "y": 720,
        "wires": []
    },
    {
        "id": "19f7ff03.9f2581",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Has AvobExtService",
        "func": "var data = msg.payload.data.oadrCreateReport;\nvar cmd = [];\nfor(var i in data){\n    createReport = data[i];\n    for(var j in createReport){\n        if(createReport[j].reportSpecifier.reportSpecifierID == \"AvobExtService\"){\n            cmd.push(createReport[j].reportSpecifier.specifierPayload.rID)\n            break;\n        }\n    }\n}\n\nif(cmd.length > 0) {\n    return {\n        payload: cmd\n    };\n}\nreturn {};\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 1420,
        "y": 780,
        "wires": [
            [
                "e21ecf46.9ccee"
            ]
        ]
    },
    {
        "id": "e21ecf46.9ccee",
        "type": "split",
        "z": "419cef7e.a4fa1",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1590,
        "y": 780,
        "wires": [
            [
                "ec4bb17d.64c56"
            ]
        ]
    },
    {
        "id": "ec4bb17d.64c56",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AvobExtService_MetaData_ServiceDeclaration",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1710,
        "y": 780,
        "wires": [
            [
                "cbfd3f85.c2d8"
            ]
        ]
    },
    {
        "id": "cbfd3f85.c2d8",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "UpdateReport AvobVenService Declaration",
        "func": "var _ids = global.get(\"AvobNodeRedOadrVEN:IDs\");\nvar dt = new Date().toISOString();\n\nlet payloadAttr = {\n        \"xmlns:oadr\": \"http://openadr.org/oadr-2.0b/2012/07\",\n        \"xmlns:atom\": \"http://www.w3.org/2005/Atom\",\n        \"xmlns:ei\": \"http://docs.oasis-open.org/ns/energyinterop/201110\",\n        \"xmlns:emix\": \"http://docs.oasis-open.org/ns/emix/2011/06\",\n        \"xmlns:gml\": \"http://www.opengis.net/gml/3.2\",\n        \"xmlns:power\": \"http://docs.oasis-open.org/ns/emix/2011/06/power\",\n        \"xmlns:pyld\": \"http://docs.oasis-open.org/ns/energyinterop/201110/payloads\",\n        \"xmlns:scale\": \"http://docs.oasis-open.org/ns/emix/2011/06/siscale\",\n        \"xmlns:strm\": \"urn:ietf:params:xml:ns:icalendar-2.0:stream\",\n        \"xmlns:xcal\": \"urn:ietf:params:xml:ns:icalendar-2.0\",\n        \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n        \"xmlns:avob\": \"http://oadr.avob.com\",\n        \"ei:schemaVersion\": \"2.0b\",\n        \"xsi:schemaLocation\": \"http://openadr.org/oadr-2.0b/2012/07 ,oadr_20b.xsd\"\n      };\n     \nlet oadrUpdateReport = {\n    _attr: payloadAttr,\n    'pyld:requestID': {\n      _value: \"0\",\n    },\n    'ei:venID': {\n        _value: _ids.venID\n    },\n    \"oadr:oadrReport\": [{\n      \n      \"xcal:dtstart\": {\n        \"xcal:date-time\": \"\"\n      },\n      \"xcal:duration\": {\n        \"xcal:duration\": \"\"\n      },\n      \"ei:eiReportID\": {\n          _value: \"\"\n      },\n      \"ei:reportRequestID\": {\n          _value: \"0\"\n      },\n      \"ei:reportSpecifierID\": {\n          _value: \"AvobExtService\"\n      },\n      \"ei:reportName\": {\n          _value: \"operatingState\"\n      },\n      \"ei:createdDateTime\": {\n          _value: dt\n      },\n      \n      \n      \"strm:intervals\": [{\n           \"ei:interval\": {\n               \"xcal:duration\": {\n              \"xcal:duration\": \"\"\n            },\n            \"xcal:uid\": {\n              \"xcal:text\": \"\"\n            },\n            \"oadr:oadrReportPayload\": [{\n              \"ei:rID\": \"\",\n              \"ei:confidence\": \"\",\n              \"avob:payloadKeyToken\": {\n                    \"avob:tokens\":[{\n                    \"avob:key\": \"nodered_handler\",\n                    \"avob:value\": \"Avob nodered OADR2.0b VEN implementation\"\n                     }]\n                    \n                \n              },\n              \"oadr:oadrDataQuality\": \"\"\n            }]\n          }\n        \n      }]\n    }]\n};\n\n \nvar msg = {\n    payload: {\n        requestType: \"UpdateReport\",\n        oadrUpdateReport: oadrUpdateReport\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1950,
        "y": 780,
        "wires": [
            [
                "3ba27321.9c732c"
            ]
        ]
    },
    {
        "id": "3ba27321.9c732c",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 2155,
        "y": 780,
        "wires": []
    },
    {
        "id": "6161a416.e2263c",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Clear Requests Flow State",
        "func": "flow.set(\"requests\", null)\nflow.set(\"reports\", null)\nglobal.set(\"AvobNodeRedOadrVEN:IDs\", null);\n\nreturn {\n    payload: {\n        data: {\n            oadrCreateReport: []\n        }\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 1160,
        "wires": [
            [
                "6ddd75b5.ae733c"
            ]
        ]
    },
    {
        "id": "6ddd75b5.ae733c",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "cf2487b8.a9e758"
        ],
        "x": 495,
        "y": 1160,
        "wires": []
    },
    {
        "id": "794b703b.93c11",
        "type": "link in",
        "z": "419cef7e.a4fa1",
        "name": "OADR_CLEAR_STATE",
        "links": [
            "abc6c328.34ee4"
        ],
        "x": 120,
        "y": 1160,
        "wires": [
            [
                "6161a416.e2263c"
            ]
        ]
    },
    {
        "id": "abc6c328.34ee4",
        "type": "link out",
        "z": "58ebdf76.3afe2",
        "name": "",
        "links": [
            "794b703b.93c11"
        ],
        "x": 640,
        "y": 540,
        "wires": []
    },
    {
        "id": "fe0cce1a.9ed38",
        "type": "debug",
        "z": "419cef7e.a4fa1",
        "name": "VTN RegisterReport",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "x": 760,
        "y": 380,
        "wires": []
    },
    {
        "id": "9761855e.0b4518",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "VEN Request AvobExtService_MetaData_ParamDeclaration",
        "func": "var _ids = global.get(\"AvobNodeRedOadrVEN:IDs\");\nvar data = msg.payload.data.oadrRegisterReport.oadrReport;\nvar reports = null;\nif(Array.isArray(data)){\n    reports = data;\n}\nelse {\n    reports = [data]\n}\nvar paramDeclarationRegistered = false;\nfor(var i in reports) {\n    var report = reports[i];\n    if(report.reportSpecifierID == \"AvobExtService\"){\n        var desc = null;\n        if(Array.isArray(report.oadrReportDescription)){\n            desc = report.oadrReportDescription;\n        }\n        else {\n           desc = [report.oadrReportDescription];\n        }\n        \n        for(var j in desc) {\n            var d = desc[j];\n            if(d.rID == \"AvobExtService_MetaData_ParamDeclaration\"){\n                paramDeclarationRegistered = true;\n                break;\n            }\n        }\n        if(paramDeclarationRegistered) {\n            break;\n        }\n    }\n}\nmsg = {\n    r: reports\n    \n};\n\nif(paramDeclarationRegistered) {\n    \n    let payloadAttr = {\n            \"xmlns:oadr\": \"http://openadr.org/oadr-2.0b/2012/07\",\n            \"xmlns:atom\": \"http://www.w3.org/2005/Atom\",\n            \"xmlns:ei\": \"http://docs.oasis-open.org/ns/energyinterop/201110\",\n            \"xmlns:emix\": \"http://docs.oasis-open.org/ns/emix/2011/06\",\n            \"xmlns:gml\": \"http://www.opengis.net/gml/3.2\",\n            \"xmlns:power\": \"http://docs.oasis-open.org/ns/emix/2011/06/power\",\n            \"xmlns:pyld\": \"http://docs.oasis-open.org/ns/energyinterop/201110/payloads\",\n            \"xmlns:scale\": \"http://docs.oasis-open.org/ns/emix/2011/06/siscale\",\n            \"xmlns:strm\": \"urn:ietf:params:xml:ns:icalendar-2.0:stream\",\n            \"xmlns:xcal\": \"urn:ietf:params:xml:ns:icalendar-2.0\",\n            \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\",\n            \"xmlns:avob\": \"http://oadr.avob.com\",\n            \"ei:schemaVersion\": \"2.0b\",\n            \"xsi:schemaLocation\": \"http://openadr.org/oadr-2.0b/2012/07 ,oadr_20b.xsd\"\n          };\n    \n    let oadrCreateReport = {\n        _attr: payloadAttr,\n        'pyld:requestID': {\n          _value: \"0\",\n        },\n        'ei:venID': {\n            _value: _ids.venID\n        },\n        'oadr:oadrReportRequest': [{\n            'ei:reportRequestID':\"\",\n            'ei:reportSpecifier':[{\n                'ei:reportSpecifierID': \"AvobExtService\",\n                'xcal:granularity': {\n                    'xcal:duration': \"P0D\"\n                },\n                'ei:reportBackDuration': {\n                    'xcal:duration': \"P0D\"\n                },\n                'ei:specifierPayload': [{\n                    'ei:rID': \"AvobExtService_MetaData_ParamDeclaration\",\n                    'ei:readingType':\"Direct Read\"\n                }]\n            }]\n        }]\n    }\n    msg.payload = {\n        requestType: 'CreateReport',\n        oadrCreateReport: oadrCreateReport\n    };\n\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 420,
        "wires": [
            [
                "da4aded8.6482d"
            ]
        ]
    },
    {
        "id": "da4aded8.6482d",
        "type": "switch",
        "z": "419cef7e.a4fa1",
        "name": "hasMessage",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "3b84e432.2e4aac"
            ]
        ]
    },
    {
        "id": "2f975701.86e878",
        "type": "debug",
        "z": "9c6e28bf.8986f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1570,
        "y": 180,
        "wires": []
    },
    {
        "id": "9a51defd.454a4",
        "type": "debug",
        "z": "419cef7e.a4fa1",
        "name": "VTN UpdateReport",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "x": 870,
        "y": 960,
        "wires": []
    },
    {
        "id": "2154f20f.076dce",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "Handle VTN UploadReport -  AvobExtService_MetaData_ParamDeclaration",
        "func": "let req = msg.payload;\nmsg.payload = {};\nmsg.payload.requestType = \"QueryRegistration\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f48a42e7.5efd4",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "f80a2674.8bcda8"
        ],
        "x": 1315,
        "y": 640,
        "wires": []
    },
    {
        "id": "ed4cbd14.59b6a",
        "type": "link out",
        "z": "419cef7e.a4fa1",
        "name": "",
        "links": [
            "b758801d.108f7",
            "beec31bb.8569e"
        ],
        "x": 935,
        "y": 180,
        "wires": []
    },
    {
        "id": "40886f62.fb979",
        "type": "function",
        "z": "419cef7e.a4fa1",
        "name": "CreatedPartyRegistration",
        "func": "var resMsg = {}\nresMsg.payload = {}\nresMsg.payload.opType = \"response\"\nresMsg.payload.responseType = \"Response\"\nresMsg.payload.responseCode = \"200\"\nresMsg.payload.responseDescription = \"\"\nresMsg.payload.requestID = msg.oadr.requestID\n\nvar regMsg = {}\nregMsg.payload = {};\nregMsg.payload.requestType = \"QueryRegistration\";\n\nnode.send(regMsg)\n\nreturn resMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 220,
        "wires": [
            [
                "ed4cbd14.59b6a"
            ]
        ]
    },
    {
        "id": "2b9883c8.1a2ecc",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Register w/ Pull xmldsig",
        "topic": "",
        "payload": "CreatePartyRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "x": 290,
        "y": 260,
        "wires": [
            [
                "b0523735.ad84d8"
            ]
        ]
    },
    {
        "id": "a87289e1.941be8",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "CreateParty Push",
        "func": "msg = {};\nmsg.payload = {};\n\nmsg.payload = { \n    requestType: \"CreatePartyRegistration\",\n    oadrHttpPullModel: false,\n    oadrTransportAddress: 'http://192.168.1.14:8083',\n    xmlSignature:true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "d15586b7.129918"
            ]
        ]
    },
    {
        "id": "828e4003.4589b",
        "type": "inject",
        "z": "58ebdf76.3afe2",
        "name": "Register w/ Push xmldsig",
        "topic": "",
        "payload": "CreatePartyRegistration",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "a87289e1.941be8"
            ]
        ]
    },
    {
        "id": "b0523735.ad84d8",
        "type": "function",
        "z": "58ebdf76.3afe2",
        "name": "CreateParty Pull",
        "func": "msg = {};\nmsg.payload = {};\n\nmsg.payload = { \n    requestType: \"CreatePartyRegistration\",\n    oadrHttpPullModel: true,\n    xmlSignature:true\n    //oadrTransportAddress: 'http://localhost:8843'\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "d15586b7.129918"
            ]
        ]
    }
]
